<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Loja;
use AppBundle\Entity\LojaProduto;
use AppBundle\Entity\Marca;
use AppBundle\Entity\Produto;
use AppBundle\Entity\TipoProduto;
use Doctrine\ORM\EntityRepository;

/**
 * LojaProdutoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LojaProdutoRepository extends EntityRepository
{
    public function listarDados($aColumns, $sWhere, $request) {

        $fields = array('lp.id', 'm.nome as nomeMarca', 'p.nome as nomeProduto', 'lp.preco', 'lp.dtAlteracao', 'p.id as idProduto');

        $query  =  $this->getEntityManager()->createQueryBuilder()
            ->select($fields)
            ->from(LojaProduto::class, 'lp')
            ->leftJoin(Produto::class, 'p', 'WITH', "lp.produto = p.id")
            ->leftJoin(Loja::class, 'l', 'WITH', "l.id = lp.loja")
            ->leftJoin(Marca::class, 'm', 'WITH', "m.id = p.marca");


        $iDisplayStart = $request->get('start');
        $iDisplayLength = $request->get('length');

        //echo $query->where($sWhere); exit;
        if (empty($sWhere)) {
            return $query->getMaxResults($iDisplayLength)->setFirstResult($iDisplayLength)->getQuery()->getArrayResult();
        }

        $result = $query->where($sWhere)
            ->setMaxResults($iDisplayLength)
            ->setFirstResult($iDisplayStart)
            ->getQuery()
            ->getArrayResult();
        //echo $query->getQuery()->getSQL(); exit;
        return $result;

    }

    public function totalRegistroFiltro() {

        return $this->createQueryBuilder('lp')
            ->select('count(lp)')
            ->getQuery()->getSingleScalarResult();

    }

    public function totalRegistroPorLoja($idLoja) {

        $query = $this->createQueryBuilder('lp')
            ->select('count(lp)')
            ->where('lp.loja = :idLoja')
            ->setParameter('idLoja', $idLoja)
            ->getQuery()->getSingleScalarResult();

        return $query;

    }

}